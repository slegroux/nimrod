# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/audio.embeddings.ipynb.

# %% auto 0
__all__ = ['EncoDec']

# %% ../../nbs/audio.embeddings.ipynb 4
from encodec import EncodecModel
from encodec.utils import convert_audio
import torchaudio
import torch
from matplotlib import pyplot as plt
from .utils import plot_waveform
import IPython.display as ipd

# %% ../../nbs/audio.embeddings.ipynb 5
class EncoDec():
    def __init__(self, device='cpu'):
        self.model = EncodecModel.encodec_model_24khz()
        self.device = device
        self.model.to(self.device)
        self.model.set_target_bandwidth(6.0)
        new_sr = 24000

    def __call__(self, wav, sr):        
        wav = convert_audio(wav, sr, self.model.sample_rate, self.model.channels)
        wav = wav.unsqueeze(0)
        with torch.no_grad():
            encoded_frames = self.model.encode(wav.to(self.device))
        codes = torch.cat([encoded[0] for encoded in encoded_frames], dim=-1)
        return(codes)

    def decode(self, codes):
        frames_from_code = [(codes, None)]
        return(self.model.decode(encoded_frames=frames_from_code))

    @property
    def sample_rate(self):
        return self.model.sample_rate
